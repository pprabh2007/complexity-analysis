Terminals unused in grammar

   HASH
   SINGLE_LINE_COMMENT
   MULTI_LINE_COMMENT
   INCLUDE
   STRUCT
   TYPEDEF
   UNION_KEYWORD


State 323 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 constant: INTEGER_CONSTANT
    2         | FLOAT_CONSTANT
    3         | CHAR_CONSTANT
    4         | ENUM_CONSTANT

    5 primary_expression: IDENTIFIER
    6                   | constant
    7                   | STRING_LITERAL
    8                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    9 postfix_expression: primary_expression
   10                   | postfix_expression SQ_BRACKET_OPEN expression SQ_BRACKET_CLOSE
   11                   | postfix_expression ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE
   12                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE
   13                   | postfix_expression DOT IDENTIFIER
   14                   | postfix_expression POINTER_ARROW IDENTIFIER
   15                   | postfix_expression PLUS_PLUS
   16                   | postfix_expression MINUS_MINUS
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list COMMA assignment_expression

   21 unary_expression: postfix_expression
   22                 | PLUS_PLUS unary_expression
   23                 | MINUS_MINUS unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   27 unary_operator: AND
   28               | MULTIPLY
   29               | PLUS
   30               | MINUS
   31               | TILDA
   32               | EXCLA_NOT

   33 cast_expression: unary_expression
   34                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression MULTIPLY cast_expression
   37                          | multiplicative_expression FWD_SLASH cast_expression
   38                          | multiplicative_expression MODULO cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression PLUS multiplicative_expression
   41                    | additive_expression MINUS multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LEFT_SHIFT additive_expression
   44                 | shift_expression RIGHT_SHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LESS_THAN shift_expression
   47                      | relational_expression GREATER_THAN shift_expression
   48                      | relational_expression LESS_THAN_EQUAL shift_expression
   49                      | relational_expression GREATER_THAN_EQUAL shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQUAL_EQUAL relational_expression
   52                    | equality_expression NOT_EQUAL relational_expression

   53 AND_expression: equality_expression
   54               | AND_expression AND equality_expression

   55 exclusive_OR_expression: AND_expression
   56                        | exclusive_OR_expression XOR AND_expression

   57 inclusive_OR_expression: exclusive_OR_expression
   58                        | inclusive_OR_expression OR exclusive_OR_expression

   59 logical_and_expression: inclusive_OR_expression
   60                       | logical_and_expression AND_AND inclusive_OR_expression

   61 logical_or_expression: logical_and_expression
   62                      | logical_or_expression OR_OR logical_and_expression

   63 conditional_expression: logical_or_expression
   64                       | logical_or_expression QUESTION_MARK expression COLON conditional_expression

   65 assignment_expression: conditional_expression
   66                      | unary_expression assignment_operator assignment_expression

   67 assignment_operator: ASSIGNMENT_OP
   68                    | CMP_ASGN_MULTIPLY
   69                    | CMP_ASGN_DIVIDE
   70                    | CMP_ASGN_MODULO
   71                    | CMP_ASGN_PLUS
   72                    | CMP_ASGN_MINUS
   73                    | CMP_ASGN_LEFT_SHIFT
   74                    | CMP_ASGN_RIGHT_SHIFT
   75                    | CMP_ASGN_AND
   76                    | CMP_ASGN_XOR
   77                    | CMP_ASGN_OR

   78 expression: assignment_expression
   79           | expression COMMA assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers SEMI_COLON
   82            | declaration_specifiers init_declarator_list SEMI_COLON

   83 declaration_specifiers: storage_class_specifier
   84                       | storage_class_specifier declaration_specifiers
   85                       | type_specifier
   86                       | type_specifier declaration_specifiers
   87                       | type_qualifier
   88                       | type_qualifier declaration_specifiers
   89                       | function_specifier
   90                       | function_specifier declaration_specifiers

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator
   94                | declarator ASSIGNMENT_OP initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC
   97                        | AUTO
   98                        | REGISTER

   99 type_specifier: VOID
  100               | DT_CHAR
  101               | DT_SHORT
  102               | DT_INT
  103               | DT_LONG
  104               | DT_FLOAT
  105               | DT_DOUBLE
  106               | SIGNED
  107               | UNSIGNED
  108               | DT_BOOL
  109               | DT_COMPLEX
  110               | DT_IMAGINARY
  111               | enum_specifier

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list
  113                         | type_specifier
  114                         | type_qualifier specifier_qualifier_list
  115                         | type_qualifier

  116 enum_specifier: ENUM C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE
  117               | ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE
  118               | ENUM C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE
  119               | ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE
  120               | ENUM IDENTIFIER

  121 enumerator_list: enumerator
  122                | enumerator_list COMMA enumerator

  123 enumerator: IDENTIFIER
  124           | IDENTIFIER ASSIGNMENT_OP constant_expression

  125 type_qualifier: CONST
  126               | VOLATILE
  127               | RESTRICT

  128 function_specifier: INLINE

  129 declarator: pointer direct_declarator
  130           | direct_declarator

  131 direct_declarator: IDENTIFIER
  132                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  133                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQ_BRACKET_CLOSE
  134                  | direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_BRACKET_CLOSE
  135                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQ_BRACKET_CLOSE
  136                  | direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  137                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  138                  | direct_declarator ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE

  139 type_qualifier_list_opt: %empty
  140                        | type_qualifier_list

  141 assignment_expression_opt: %empty
  142                          | assignment_expression

  143 pointer: MULTIPLY
  144        | MULTIPLY type_qualifier_list
  145        | MULTIPLY pointer
  146        | MULTIPLY type_qualifier_list pointer

  147 type_qualifier_list: type_qualifier
  148                    | type_qualifier_list type_qualifier

  149 parameter_type_list: parameter_list
  150                    | parameter_list COMMA THREE_DOTS

  151 parameter_list: parameter_declaration
  152               | parameter_list COMMA parameter_declaration

  153 parameter_declaration: declaration_specifiers declarator
  154                      | declaration_specifiers

  155 identifier_list: IDENTIFIER
  156                | identifier_list COMMA IDENTIFIER

  157 type_name: specifier_qualifier_list

  158 initializer: assignment_expression
  159            | C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
  160            | C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE

  161 initializer_list: initializer
  162                 | designation initializer
  163                 | initializer_list COMMA initializer
  164                 | initializer_list COMMA designation initializer

  165 designation: designator_list ASSIGNMENT_OP

  166 designator_list: designator
  167                | designator_list designator

  168 designator: SQ_BRACKET_OPEN constant_expression SQ_BRACKET_CLOSE
  169           | DOT IDENTIFIER

  170 statement: labeled_statement
  171          | compound_statement
  172          | expression_statement
  173          | selection_statement
  174          | iteration_statement
  175          | jump_statement

  176 labeled_statement: IDENTIFIER COLON statement
  177                  | CASE_KEYWORD constant_expression COLON statement
  178                  | DEFAULT COLON statement

  179 compound_statement: C_BRACKET_OPEN C_BRACKET_CLOSE
  180                   | C_BRACKET_OPEN block_item_list C_BRACKET_CLOSE

  181 block_item_list: block_item
  182                | block_item_list block_item

  183 block_item: declaration
  184           | statement

  185 expression_statement: SEMI_COLON
  186                     | expression SEMI_COLON

  187 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  188                    | IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE_KEYWORD statement
  189                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  190 iteration_statement: WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  191                    | DO_KEYWORD statement WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMI_COLON
  192                    | FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement ROUND_BRACKET_CLOSE statement
  193                    | FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement expression ROUND_BRACKET_CLOSE statement
  194                    | FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement expression ROUND_BRACKET_CLOSE statement
  195                    | FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement ROUND_BRACKET_CLOSE statement

  196 jump_statement: GOTO IDENTIFIER SEMI_COLON
  197               | CONTINUE_LOOP SEMI_COLON
  198               | BREAK_LOOP SEMI_COLON
  199               | RETURN_VAL SEMI_COLON
  200               | RETURN_VAL expression SEMI_COLON

  201 translation_unit: external_declaration
  202                 | translation_unit external_declaration

  203 external_declaration: function_definition
  204                     | declaration

  205 function_definition: declaration_specifiers declarator declaration_list compound_statement
  206                    | declaration_specifiers declarator compound_statement

  207 declaration_list: declaration
  208                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
SQ_BRACKET_OPEN (258) 10 133 134 135 168
SQ_BRACKET_CLOSE (259) 10 133 134 135 168
C_BRACKET_OPEN (260) 17 18 116 117 118 119 159 160 179 180
C_BRACKET_CLOSE (261) 17 18 116 117 118 119 159 160 179 180
ROUND_BRACKET_OPEN (262) 8 11 12 17 18 26 34 132 136 137 138 187 188
    189 190 191 192 193 194 195
ROUND_BRACKET_CLOSE (263) 8 11 12 17 18 26 34 132 136 137 138 187 188
    189 190 191 192 193 194 195
MODULO (264) 38
PLUS (265) 29 40
MINUS (266) 30 41
MULTIPLY (267) 28 36 135 143 144 145 146
FWD_SLASH (268) 37
AND (269) 27 54
OR (270) 58
XOR (271) 56
EXCLA_NOT (272) 32
AND_AND (273) 60
OR_OR (274) 62
TILDA (275) 31
LEFT_SHIFT (276) 43
RIGHT_SHIFT (277) 44
LESS_THAN (278) 46
GREATER_THAN (279) 47
LESS_THAN_EQUAL (280) 48
GREATER_THAN_EQUAL (281) 49
EQUAL_EQUAL (282) 51
NOT_EQUAL (283) 52
CMP_ASGN_MULTIPLY (284) 68
CMP_ASGN_DIVIDE (285) 69
CMP_ASGN_MODULO (286) 70
CMP_ASGN_PLUS (287) 71
CMP_ASGN_MINUS (288) 72
CMP_ASGN_LEFT_SHIFT (289) 73
CMP_ASGN_RIGHT_SHIFT (290) 74
CMP_ASGN_AND (291) 75
CMP_ASGN_XOR (292) 76
CMP_ASGN_OR (293) 77
PLUS_PLUS (294) 15 22
MINUS_MINUS (295) 16 23
DOT (296) 13 169
POINTER_ARROW (297) 14
QUESTION_MARK (298) 64
COLON (299) 64 176 177 178
SEMI_COLON (300) 81 82 185 186 191 196 197 198 199 200
THREE_DOTS (301) 150
ASSIGNMENT_OP (302) 67 94 124 165
COMMA (303) 18 20 79 92 118 119 122 150 152 156 160 163 164
HASH (304)
SINGLE_LINE_COMMENT (305)
MULTI_LINE_COMMENT (306)
INCLUDE (307)
AUTO (308) 97
ENUM (309) 116 117 118 119 120
RESTRICT (310) 127
UNSIGNED (311) 107
BREAK_LOOP (312) 198
EXTERN (313) 95
RETURN_VAL (314) 199 200
VOID (315) 99
CASE_KEYWORD (316) 177
DT_FLOAT (317) 104
DT_SHORT (318) 101
VOLATILE (319) 126
DT_CHAR (320) 100
FOR_KEYWORD (321) 192 193 194 195
SIGNED (322) 106
WHILE_KEYWORD (323) 190 191
CONST (324) 125
GOTO (325) 196
SIZEOF (326) 25 26
DT_BOOL (327) 108
CONTINUE_LOOP (328) 197
IF_KEYWORD (329) 187 188
STATIC (330) 96 134
DT_COMPLEX (331) 109
DEFAULT (332) 178
INLINE (333) 128
STRUCT (334)
DT_IMAGINARY (335) 110
DO_KEYWORD (336) 191
DT_INT (337) 102
SWITCH (338) 189
DT_DOUBLE (339) 105
DT_LONG (340) 103
TYPEDEF (341)
ELSE_KEYWORD (342) 188
REGISTER (343) 98
UNION_KEYWORD (344)
IDENTIFIER (345) 5 13 14 117 119 120 123 124 131 155 156 169 176 196
STRING_LITERAL (346) 7
INTEGER_CONSTANT (347) 1
FLOAT_CONSTANT (348) 2
CHAR_CONSTANT (349) 3
ENUM_CONSTANT (350) 4


Nonterminals, with rules where they appear

$accept (96)
    on left: 0
constant (97)
    on left: 1 2 3 4, on right: 6
primary_expression (98)
    on left: 5 6 7 8, on right: 9
postfix_expression (99)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 10 11 12 13 14
    15 16 21
argument_expression_list (100)
    on left: 19 20, on right: 12 20
unary_expression (101)
    on left: 21 22 23 24 25 26, on right: 22 23 25 33 66
unary_operator (102)
    on left: 27 28 29 30 31 32, on right: 24
cast_expression (103)
    on left: 33 34, on right: 24 34 35 36 37 38
multiplicative_expression (104)
    on left: 35 36 37 38, on right: 36 37 38 39 40 41
additive_expression (105)
    on left: 39 40 41, on right: 40 41 42 43 44
shift_expression (106)
    on left: 42 43 44, on right: 43 44 45 46 47 48 49
relational_expression (107)
    on left: 45 46 47 48 49, on right: 46 47 48 49 50 51 52
equality_expression (108)
    on left: 50 51 52, on right: 51 52 53 54
AND_expression (109)
    on left: 53 54, on right: 54 55 56
exclusive_OR_expression (110)
    on left: 55 56, on right: 56 57 58
inclusive_OR_expression (111)
    on left: 57 58, on right: 58 59 60
logical_and_expression (112)
    on left: 59 60, on right: 60 61 62
logical_or_expression (113)
    on left: 61 62, on right: 62 63 64
conditional_expression (114)
    on left: 63 64, on right: 64 65 80
assignment_expression (115)
    on left: 65 66, on right: 19 20 66 78 79 134 142 158
assignment_operator (116)
    on left: 67 68 69 70 71 72 73 74 75 76 77, on right: 66
expression (117)
    on left: 78 79, on right: 8 10 64 79 186 187 188 189 190 191 193
    194 200
constant_expression (118)
    on left: 80, on right: 124 168 177
declaration (119)
    on left: 81 82, on right: 183 194 195 204 207 208
declaration_specifiers (120)
    on left: 83 84 85 86 87 88 89 90, on right: 81 82 84 86 88 90 153
    154 205 206
init_declarator_list (121)
    on left: 91 92, on right: 82 92
init_declarator (122)
    on left: 93 94, on right: 91 92
storage_class_specifier (123)
    on left: 95 96 97 98, on right: 83 84
type_specifier (124)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110 111, on right:
    85 86 112 113
specifier_qualifier_list (125)
    on left: 112 113 114 115, on right: 112 114 157
enum_specifier (126)
    on left: 116 117 118 119 120, on right: 111
enumerator_list (127)
    on left: 121 122, on right: 116 117 118 119 122
enumerator (128)
    on left: 123 124, on right: 121 122
type_qualifier (129)
    on left: 125 126 127, on right: 87 88 114 115 147 148
function_specifier (130)
    on left: 128, on right: 89 90
declarator (131)
    on left: 129 130, on right: 93 94 132 153 205 206
direct_declarator (132)
    on left: 131 132 133 134 135 136 137 138, on right: 129 130 133
    134 135 136 137 138
type_qualifier_list_opt (133)
    on left: 139 140, on right: 133 134 135
assignment_expression_opt (134)
    on left: 141 142, on right: 133
pointer (135)
    on left: 143 144 145 146, on right: 129 145 146
type_qualifier_list (136)
    on left: 147 148, on right: 140 144 146 148
parameter_type_list (137)
    on left: 149 150, on right: 136
parameter_list (138)
    on left: 151 152, on right: 149 150 152
parameter_declaration (139)
    on left: 153 154, on right: 151 152
identifier_list (140)
    on left: 155 156, on right: 137 156
type_name (141)
    on left: 157, on right: 17 18 26 34
initializer (142)
    on left: 158 159 160, on right: 94 161 162 163 164
initializer_list (143)
    on left: 161 162 163 164, on right: 17 18 159 160 163 164
designation (144)
    on left: 165, on right: 162 164
designator_list (145)
    on left: 166 167, on right: 165 167
designator (146)
    on left: 168 169, on right: 166 167
statement (147)
    on left: 170 171 172 173 174 175, on right: 176 177 178 184 187
    188 189 190 191 192 193 194 195
labeled_statement (148)
    on left: 176 177 178, on right: 170
compound_statement (149)
    on left: 179 180, on right: 171 205 206
block_item_list (150)
    on left: 181 182, on right: 180 182
block_item (151)
    on left: 183 184, on right: 181 182
expression_statement (152)
    on left: 185 186, on right: 172 192 193 194 195
selection_statement (153)
    on left: 187 188 189, on right: 173
iteration_statement (154)
    on left: 190 191 192 193 194 195, on right: 174
jump_statement (155)
    on left: 196 197 198 199 200, on right: 175
translation_unit (156)
    on left: 201 202, on right: 0 202
external_declaration (157)
    on left: 203 204, on right: 201 202
function_definition (158)
    on left: 205 206, on right: 203
declaration_list (159)
    on left: 207 208, on right: 205 208


State 0

    0 $accept: . translation_unit $end

    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   97 storage_class_specifier: AUTO .

    $default  reduce using rule 97 (storage_class_specifier)


State 2

  116 enum_specifier: ENUM . C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE
  117               | ENUM . IDENTIFIER C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE
  118               | ENUM . C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE
  119               | ENUM . IDENTIFIER C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE
  120               | ENUM . IDENTIFIER

    C_BRACKET_OPEN  shift, and go to state 32
    IDENTIFIER      shift, and go to state 33


State 3

  127 type_qualifier: RESTRICT .

    $default  reduce using rule 127 (type_qualifier)


State 4

  107 type_specifier: UNSIGNED .

    $default  reduce using rule 107 (type_specifier)


State 5

   95 storage_class_specifier: EXTERN .

    $default  reduce using rule 95 (storage_class_specifier)


State 6

   99 type_specifier: VOID .

    $default  reduce using rule 99 (type_specifier)


State 7

  104 type_specifier: DT_FLOAT .

    $default  reduce using rule 104 (type_specifier)


State 8

  101 type_specifier: DT_SHORT .

    $default  reduce using rule 101 (type_specifier)


State 9

  126 type_qualifier: VOLATILE .

    $default  reduce using rule 126 (type_qualifier)


State 10

  100 type_specifier: DT_CHAR .

    $default  reduce using rule 100 (type_specifier)


State 11

  106 type_specifier: SIGNED .

    $default  reduce using rule 106 (type_specifier)


State 12

  125 type_qualifier: CONST .

    $default  reduce using rule 125 (type_qualifier)


State 13

  108 type_specifier: DT_BOOL .

    $default  reduce using rule 108 (type_specifier)


State 14

   96 storage_class_specifier: STATIC .

    $default  reduce using rule 96 (storage_class_specifier)


State 15

  109 type_specifier: DT_COMPLEX .

    $default  reduce using rule 109 (type_specifier)


State 16

  128 function_specifier: INLINE .

    $default  reduce using rule 128 (function_specifier)


State 17

  110 type_specifier: DT_IMAGINARY .

    $default  reduce using rule 110 (type_specifier)


State 18

  102 type_specifier: DT_INT .

    $default  reduce using rule 102 (type_specifier)


State 19

  105 type_specifier: DT_DOUBLE .

    $default  reduce using rule 105 (type_specifier)


State 20

  103 type_specifier: DT_LONG .

    $default  reduce using rule 103 (type_specifier)


State 21

   98 storage_class_specifier: REGISTER .

    $default  reduce using rule 98 (storage_class_specifier)


State 22

  204 external_declaration: declaration .

    $default  reduce using rule 204 (external_declaration)


State 23

   81 declaration: declaration_specifiers . SEMI_COLON
   82            | declaration_specifiers . init_declarator_list SEMI_COLON
  205 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  206                    | declaration_specifiers . declarator compound_statement

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    SEMI_COLON          shift, and go to state 36
    IDENTIFIER          shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 40
    direct_declarator     go to state 41
    pointer               go to state 42


State 24

   83 declaration_specifiers: storage_class_specifier .
   84                       | storage_class_specifier . declaration_specifiers

    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    $default  reduce using rule 83 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   85 declaration_specifiers: type_specifier .
   86                       | type_specifier . declaration_specifiers

    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    $default  reduce using rule 85 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  111 type_specifier: enum_specifier .

    $default  reduce using rule 111 (type_specifier)


State 27

   87 declaration_specifiers: type_qualifier .
   88                       | type_qualifier . declaration_specifiers

    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    $default  reduce using rule 87 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   89 declaration_specifiers: function_specifier .
   90                       | function_specifier . declaration_specifiers

    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  202 translation_unit: translation_unit . external_declaration

    $end          shift, and go to state 47
    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  201 translation_unit: external_declaration .

    $default  reduce using rule 201 (translation_unit)


State 31

  203 external_declaration: function_definition .

    $default  reduce using rule 203 (external_declaration)


State 32

  116 enum_specifier: ENUM C_BRACKET_OPEN . enumerator_list C_BRACKET_CLOSE
  118               | ENUM C_BRACKET_OPEN . enumerator_list COMMA C_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 49

    enumerator_list  go to state 50
    enumerator       go to state 51


State 33

  117 enum_specifier: ENUM IDENTIFIER . C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE
  119               | ENUM IDENTIFIER . C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE
  120               | ENUM IDENTIFIER .

    C_BRACKET_OPEN  shift, and go to state 52

    $default  reduce using rule 120 (enum_specifier)


State 34

  132 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    IDENTIFIER          shift, and go to state 37

    declarator         go to state 53
    direct_declarator  go to state 41
    pointer            go to state 42


State 35

  143 pointer: MULTIPLY .
  144        | MULTIPLY . type_qualifier_list
  145        | MULTIPLY . pointer
  146        | MULTIPLY . type_qualifier_list pointer

    MULTIPLY  shift, and go to state 35
    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 143 (pointer)

    type_qualifier       go to state 54
    pointer              go to state 55
    type_qualifier_list  go to state 56


State 36

   81 declaration: declaration_specifiers SEMI_COLON .

    $default  reduce using rule 81 (declaration)


State 37

  131 direct_declarator: IDENTIFIER .

    $default  reduce using rule 131 (direct_declarator)


State 38

   82 declaration: declaration_specifiers init_declarator_list . SEMI_COLON
   92 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMI_COLON  shift, and go to state 57
    COMMA       shift, and go to state 58


State 39

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 40

   93 init_declarator: declarator .
   94                | declarator . ASSIGNMENT_OP initializer
  205 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  206                    | declaration_specifiers declarator . compound_statement

    C_BRACKET_OPEN  shift, and go to state 59
    ASSIGNMENT_OP   shift, and go to state 60
    AUTO            shift, and go to state 1
    ENUM            shift, and go to state 2
    RESTRICT        shift, and go to state 3
    UNSIGNED        shift, and go to state 4
    EXTERN          shift, and go to state 5
    VOID            shift, and go to state 6
    DT_FLOAT        shift, and go to state 7
    DT_SHORT        shift, and go to state 8
    VOLATILE        shift, and go to state 9
    DT_CHAR         shift, and go to state 10
    SIGNED          shift, and go to state 11
    CONST           shift, and go to state 12
    DT_BOOL         shift, and go to state 13
    STATIC          shift, and go to state 14
    DT_COMPLEX      shift, and go to state 15
    INLINE          shift, and go to state 16
    DT_IMAGINARY    shift, and go to state 17
    DT_INT          shift, and go to state 18
    DT_DOUBLE       shift, and go to state 19
    DT_LONG         shift, and go to state 20
    REGISTER        shift, and go to state 21

    $default  reduce using rule 93 (init_declarator)

    declaration              go to state 61
    declaration_specifiers   go to state 62
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 63
    declaration_list         go to state 64


State 41

  130 declarator: direct_declarator .
  133 direct_declarator: direct_declarator . SQ_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQ_BRACKET_CLOSE
  134                  | direct_declarator . SQ_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_BRACKET_CLOSE
  135                  | direct_declarator . SQ_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQ_BRACKET_CLOSE
  136                  | direct_declarator . ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  137                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  138                  | direct_declarator . ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE

    SQ_BRACKET_OPEN     shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66

    $default  reduce using rule 130 (declarator)


State 42

  129 declarator: pointer . direct_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 34
    IDENTIFIER          shift, and go to state 37

    direct_declarator  go to state 67


State 43

   84 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 84 (declaration_specifiers)


State 44

   86 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 86 (declaration_specifiers)


State 45

   88 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 88 (declaration_specifiers)


State 46

   90 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 90 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  202 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 202 (translation_unit)


State 49

  123 enumerator: IDENTIFIER .
  124           | IDENTIFIER . ASSIGNMENT_OP constant_expression

    ASSIGNMENT_OP  shift, and go to state 68

    $default  reduce using rule 123 (enumerator)


State 50

  116 enum_specifier: ENUM C_BRACKET_OPEN enumerator_list . C_BRACKET_CLOSE
  118               | ENUM C_BRACKET_OPEN enumerator_list . COMMA C_BRACKET_CLOSE
  122 enumerator_list: enumerator_list . COMMA enumerator

    C_BRACKET_CLOSE  shift, and go to state 69
    COMMA            shift, and go to state 70


State 51

  121 enumerator_list: enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 52

  117 enum_specifier: ENUM IDENTIFIER C_BRACKET_OPEN . enumerator_list C_BRACKET_CLOSE
  119               | ENUM IDENTIFIER C_BRACKET_OPEN . enumerator_list COMMA C_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 49

    enumerator_list  go to state 71
    enumerator       go to state 51


State 53

  132 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 72


State 54

  147 type_qualifier_list: type_qualifier .

    $default  reduce using rule 147 (type_qualifier_list)


State 55

  145 pointer: MULTIPLY pointer .

    $default  reduce using rule 145 (pointer)


State 56

  144 pointer: MULTIPLY type_qualifier_list .
  146        | MULTIPLY type_qualifier_list . pointer
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    MULTIPLY  shift, and go to state 35
    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 144 (pointer)

    type_qualifier  go to state 73
    pointer         go to state 74


State 57

   82 declaration: declaration_specifiers init_declarator_list SEMI_COLON .

    $default  reduce using rule 82 (declaration)


State 58

   92 init_declarator_list: init_declarator_list COMMA . init_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    IDENTIFIER          shift, and go to state 37

    init_declarator    go to state 75
    declarator         go to state 76
    direct_declarator  go to state 41
    pointer            go to state 42


State 59

  179 compound_statement: C_BRACKET_OPEN . C_BRACKET_CLOSE
  180                   | C_BRACKET_OPEN . block_item_list C_BRACKET_CLOSE

    C_BRACKET_OPEN      shift, and go to state 59
    C_BRACKET_CLOSE     shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK_LOOP          shift, and go to state 88
    EXTERN              shift, and go to state 5
    RETURN_VAL          shift, and go to state 89
    VOID                shift, and go to state 6
    CASE_KEYWORD        shift, and go to state 90
    DT_FLOAT            shift, and go to state 7
    DT_SHORT            shift, and go to state 8
    VOLATILE            shift, and go to state 9
    DT_CHAR             shift, and go to state 10
    FOR_KEYWORD         shift, and go to state 91
    SIGNED              shift, and go to state 11
    WHILE_KEYWORD       shift, and go to state 92
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    DT_BOOL             shift, and go to state 13
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    STATIC              shift, and go to state 14
    DT_COMPLEX          shift, and go to state 15
    DEFAULT             shift, and go to state 97
    INLINE              shift, and go to state 16
    DT_IMAGINARY        shift, and go to state 17
    DO_KEYWORD          shift, and go to state 98
    DT_INT              shift, and go to state 18
    SWITCH              shift, and go to state 99
    DT_DOUBLE           shift, and go to state 19
    DT_LONG             shift, and go to state 20
    REGISTER            shift, and go to state 21
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    declaration                go to state 125
    declaration_specifiers     go to state 62
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 126
    labeled_statement          go to state 127
    compound_statement         go to state 128
    block_item_list            go to state 129
    block_item                 go to state 130
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 60

   94 init_declarator: declarator ASSIGNMENT_OP . initializer

    C_BRACKET_OPEN      shift, and go to state 135
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 138


State 61

  207 declaration_list: declaration .

    $default  reduce using rule 207 (declaration_list)


State 62

   81 declaration: declaration_specifiers . SEMI_COLON
   82            | declaration_specifiers . init_declarator_list SEMI_COLON

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    SEMI_COLON          shift, and go to state 36
    IDENTIFIER          shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 76
    direct_declarator     go to state 41
    pointer               go to state 42


State 63

  206 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 206 (function_definition)


State 64

  205 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  208 declaration_list: declaration_list . declaration

    C_BRACKET_OPEN  shift, and go to state 59
    AUTO            shift, and go to state 1
    ENUM            shift, and go to state 2
    RESTRICT        shift, and go to state 3
    UNSIGNED        shift, and go to state 4
    EXTERN          shift, and go to state 5
    VOID            shift, and go to state 6
    DT_FLOAT        shift, and go to state 7
    DT_SHORT        shift, and go to state 8
    VOLATILE        shift, and go to state 9
    DT_CHAR         shift, and go to state 10
    SIGNED          shift, and go to state 11
    CONST           shift, and go to state 12
    DT_BOOL         shift, and go to state 13
    STATIC          shift, and go to state 14
    DT_COMPLEX      shift, and go to state 15
    INLINE          shift, and go to state 16
    DT_IMAGINARY    shift, and go to state 17
    DT_INT          shift, and go to state 18
    DT_DOUBLE       shift, and go to state 19
    DT_LONG         shift, and go to state 20
    REGISTER        shift, and go to state 21

    declaration              go to state 139
    declaration_specifiers   go to state 62
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 140


State 65

  133 direct_declarator: direct_declarator SQ_BRACKET_OPEN . type_qualifier_list_opt assignment_expression_opt SQ_BRACKET_CLOSE
  134                  | direct_declarator SQ_BRACKET_OPEN . STATIC type_qualifier_list_opt assignment_expression SQ_BRACKET_CLOSE
  135                  | direct_declarator SQ_BRACKET_OPEN . type_qualifier_list_opt MULTIPLY SQ_BRACKET_CLOSE

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12
    STATIC    shift, and go to state 141

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 54
    type_qualifier_list_opt  go to state 142
    type_qualifier_list      go to state 143


State 66

  136 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . parameter_type_list ROUND_BRACKET_CLOSE
  137                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list ROUND_BRACKET_CLOSE
  138                  | direct_declarator ROUND_BRACKET_OPEN . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 144
    AUTO                 shift, and go to state 1
    ENUM                 shift, and go to state 2
    RESTRICT             shift, and go to state 3
    UNSIGNED             shift, and go to state 4
    EXTERN               shift, and go to state 5
    VOID                 shift, and go to state 6
    DT_FLOAT             shift, and go to state 7
    DT_SHORT             shift, and go to state 8
    VOLATILE             shift, and go to state 9
    DT_CHAR              shift, and go to state 10
    SIGNED               shift, and go to state 11
    CONST                shift, and go to state 12
    DT_BOOL              shift, and go to state 13
    STATIC               shift, and go to state 14
    DT_COMPLEX           shift, and go to state 15
    INLINE               shift, and go to state 16
    DT_IMAGINARY         shift, and go to state 17
    DT_INT               shift, and go to state 18
    DT_DOUBLE            shift, and go to state 19
    DT_LONG              shift, and go to state 20
    REGISTER             shift, and go to state 21
    IDENTIFIER           shift, and go to state 145

    declaration_specifiers   go to state 146
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 147
    parameter_list           go to state 148
    parameter_declaration    go to state 149
    identifier_list          go to state 150


State 67

  129 declarator: pointer direct_declarator .
  133 direct_declarator: direct_declarator . SQ_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQ_BRACKET_CLOSE
  134                  | direct_declarator . SQ_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_BRACKET_CLOSE
  135                  | direct_declarator . SQ_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQ_BRACKET_CLOSE
  136                  | direct_declarator . ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  137                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  138                  | direct_declarator . ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE

    SQ_BRACKET_OPEN     shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66

    $default  reduce using rule 129 (declarator)


State 68

  124 enumerator: IDENTIFIER ASSIGNMENT_OP . constant_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 152
    constant_expression        go to state 153


State 69

  116 enum_specifier: ENUM C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE .

    $default  reduce using rule 116 (enum_specifier)


State 70

  118 enum_specifier: ENUM C_BRACKET_OPEN enumerator_list COMMA . C_BRACKET_CLOSE
  122 enumerator_list: enumerator_list COMMA . enumerator

    C_BRACKET_CLOSE  shift, and go to state 154
    IDENTIFIER       shift, and go to state 49

    enumerator  go to state 155


State 71

  117 enum_specifier: ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list . C_BRACKET_CLOSE
  119               | ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list . COMMA C_BRACKET_CLOSE
  122 enumerator_list: enumerator_list . COMMA enumerator

    C_BRACKET_CLOSE  shift, and go to state 156
    COMMA            shift, and go to state 157


State 72

  132 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 132 (direct_declarator)


State 73

  148 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 74

  146 pointer: MULTIPLY type_qualifier_list pointer .

    $default  reduce using rule 146 (pointer)


State 75

   92 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 76

   93 init_declarator: declarator .
   94                | declarator . ASSIGNMENT_OP initializer

    ASSIGNMENT_OP  shift, and go to state 60

    $default  reduce using rule 93 (init_declarator)


State 77

  179 compound_statement: C_BRACKET_OPEN C_BRACKET_CLOSE .

    $default  reduce using rule 179 (compound_statement)


State 78

    8 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   17 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE
   34 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    VOID                shift, and go to state 6
    DT_FLOAT            shift, and go to state 7
    DT_SHORT            shift, and go to state 8
    VOLATILE            shift, and go to state 9
    DT_CHAR             shift, and go to state 10
    SIGNED              shift, and go to state 11
    CONST               shift, and go to state 12
    SIZEOF              shift, and go to state 94
    DT_BOOL             shift, and go to state 13
    DT_COMPLEX          shift, and go to state 15
    DT_IMAGINARY        shift, and go to state 17
    DT_INT              shift, and go to state 18
    DT_DOUBLE           shift, and go to state 19
    DT_LONG             shift, and go to state 20
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 158
    type_specifier             go to state 159
    specifier_qualifier_list   go to state 160
    enum_specifier             go to state 26
    type_qualifier             go to state 161
    type_name                  go to state 162


State 79

   29 unary_operator: PLUS .

    $default  reduce using rule 29 (unary_operator)


State 80

   30 unary_operator: MINUS .

    $default  reduce using rule 30 (unary_operator)


State 81

   28 unary_operator: MULTIPLY .

    $default  reduce using rule 28 (unary_operator)


State 82

   27 unary_operator: AND .

    $default  reduce using rule 27 (unary_operator)


State 83

   32 unary_operator: EXCLA_NOT .

    $default  reduce using rule 32 (unary_operator)


State 84

   31 unary_operator: TILDA .

    $default  reduce using rule 31 (unary_operator)


State 85

   22 unary_expression: PLUS_PLUS . unary_expression

    ROUND_BRACKET_OPEN  shift, and go to state 163
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 164
    unary_operator      go to state 110


State 86

   23 unary_expression: MINUS_MINUS . unary_expression

    ROUND_BRACKET_OPEN  shift, and go to state 163
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 165
    unary_operator      go to state 110


State 87

  185 expression_statement: SEMI_COLON .

    $default  reduce using rule 185 (expression_statement)


State 88

  198 jump_statement: BREAK_LOOP . SEMI_COLON

    SEMI_COLON  shift, and go to state 166


State 89

  199 jump_statement: RETURN_VAL . SEMI_COLON
  200               | RETURN_VAL . expression SEMI_COLON

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 167
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 168


State 90

  177 labeled_statement: CASE_KEYWORD . constant_expression COLON statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 152
    constant_expression        go to state 169


State 91

  192 iteration_statement: FOR_KEYWORD . ROUND_BRACKET_OPEN expression_statement expression_statement ROUND_BRACKET_CLOSE statement
  193                    | FOR_KEYWORD . ROUND_BRACKET_OPEN expression_statement expression_statement expression ROUND_BRACKET_CLOSE statement
  194                    | FOR_KEYWORD . ROUND_BRACKET_OPEN declaration expression_statement expression ROUND_BRACKET_CLOSE statement
  195                    | FOR_KEYWORD . ROUND_BRACKET_OPEN declaration expression_statement ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 170


State 92

  190 iteration_statement: WHILE_KEYWORD . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 171


State 93

  196 jump_statement: GOTO . IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 172


State 94

   25 unary_expression: SIZEOF . unary_expression
   26                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 173
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 174
    unary_operator      go to state 110


State 95

  197 jump_statement: CONTINUE_LOOP . SEMI_COLON

    SEMI_COLON  shift, and go to state 175


State 96

  187 selection_statement: IF_KEYWORD . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  188                    | IF_KEYWORD . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE_KEYWORD statement

    ROUND_BRACKET_OPEN  shift, and go to state 176


State 97

  178 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 177


State 98

  191 iteration_statement: DO_KEYWORD . statement WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMI_COLON

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 178
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 99

  189 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 179


State 100

    5 primary_expression: IDENTIFIER .
  176 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 180

    $default  reduce using rule 5 (primary_expression)


State 101

    7 primary_expression: STRING_LITERAL .

    $default  reduce using rule 7 (primary_expression)


State 102

    1 constant: INTEGER_CONSTANT .

    $default  reduce using rule 1 (constant)


State 103

    2 constant: FLOAT_CONSTANT .

    $default  reduce using rule 2 (constant)


State 104

    3 constant: CHAR_CONSTANT .

    $default  reduce using rule 3 (constant)


State 105

    4 constant: ENUM_CONSTANT .

    $default  reduce using rule 4 (constant)


State 106

    6 primary_expression: constant .

    $default  reduce using rule 6 (primary_expression)


State 107

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 108

   10 postfix_expression: postfix_expression . SQ_BRACKET_OPEN expression SQ_BRACKET_CLOSE
   11                   | postfix_expression . ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE
   12                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE
   13                   | postfix_expression . DOT IDENTIFIER
   14                   | postfix_expression . POINTER_ARROW IDENTIFIER
   15                   | postfix_expression . PLUS_PLUS
   16                   | postfix_expression . MINUS_MINUS
   21 unary_expression: postfix_expression .

    SQ_BRACKET_OPEN     shift, and go to state 181
    ROUND_BRACKET_OPEN  shift, and go to state 182
    PLUS_PLUS           shift, and go to state 183
    MINUS_MINUS         shift, and go to state 184
    DOT                 shift, and go to state 185
    POINTER_ARROW       shift, and go to state 186

    $default  reduce using rule 21 (unary_expression)


State 109

   33 cast_expression: unary_expression .
   66 assignment_expression: unary_expression . assignment_operator assignment_expression

    CMP_ASGN_MULTIPLY     shift, and go to state 187
    CMP_ASGN_DIVIDE       shift, and go to state 188
    CMP_ASGN_MODULO       shift, and go to state 189
    CMP_ASGN_PLUS         shift, and go to state 190
    CMP_ASGN_MINUS        shift, and go to state 191
    CMP_ASGN_LEFT_SHIFT   shift, and go to state 192
    CMP_ASGN_RIGHT_SHIFT  shift, and go to state 193
    CMP_ASGN_AND          shift, and go to state 194
    CMP_ASGN_XOR          shift, and go to state 195
    CMP_ASGN_OR           shift, and go to state 196
    ASSIGNMENT_OP         shift, and go to state 197

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 198


State 110

   24 unary_expression: unary_operator . cast_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 151
    unary_operator      go to state 110
    cast_expression     go to state 199


State 111

   35 multiplicative_expression: cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 112

   36 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   37                          | multiplicative_expression . FWD_SLASH cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   39 additive_expression: multiplicative_expression .

    MODULO     shift, and go to state 200
    MULTIPLY   shift, and go to state 201
    FWD_SLASH  shift, and go to state 202

    $default  reduce using rule 39 (additive_expression)


State 113

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   42 shift_expression: additive_expression .

    PLUS   shift, and go to state 203
    MINUS  shift, and go to state 204

    $default  reduce using rule 42 (shift_expression)


State 114

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 205
    RIGHT_SHIFT  shift, and go to state 206

    $default  reduce using rule 45 (relational_expression)


State 115

   46 relational_expression: relational_expression . LESS_THAN shift_expression
   47                      | relational_expression . GREATER_THAN shift_expression
   48                      | relational_expression . LESS_THAN_EQUAL shift_expression
   49                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   50 equality_expression: relational_expression .

    LESS_THAN           shift, and go to state 207
    GREATER_THAN        shift, and go to state 208
    LESS_THAN_EQUAL     shift, and go to state 209
    GREATER_THAN_EQUAL  shift, and go to state 210

    $default  reduce using rule 50 (equality_expression)


State 116

   51 equality_expression: equality_expression . EQUAL_EQUAL relational_expression
   52                    | equality_expression . NOT_EQUAL relational_expression
   53 AND_expression: equality_expression .

    EQUAL_EQUAL  shift, and go to state 211
    NOT_EQUAL    shift, and go to state 212

    $default  reduce using rule 53 (AND_expression)


State 117

   54 AND_expression: AND_expression . AND equality_expression
   55 exclusive_OR_expression: AND_expression .

    AND  shift, and go to state 213

    $default  reduce using rule 55 (exclusive_OR_expression)


State 118

   56 exclusive_OR_expression: exclusive_OR_expression . XOR AND_expression
   57 inclusive_OR_expression: exclusive_OR_expression .

    XOR  shift, and go to state 214

    $default  reduce using rule 57 (inclusive_OR_expression)


State 119

   58 inclusive_OR_expression: inclusive_OR_expression . OR exclusive_OR_expression
   59 logical_and_expression: inclusive_OR_expression .

    OR  shift, and go to state 215

    $default  reduce using rule 59 (logical_and_expression)


State 120

   60 logical_and_expression: logical_and_expression . AND_AND inclusive_OR_expression
   61 logical_or_expression: logical_and_expression .

    AND_AND  shift, and go to state 216

    $default  reduce using rule 61 (logical_or_expression)


State 121

   62 logical_or_expression: logical_or_expression . OR_OR logical_and_expression
   63 conditional_expression: logical_or_expression .
   64                       | logical_or_expression . QUESTION_MARK expression COLON conditional_expression

    OR_OR          shift, and go to state 217
    QUESTION_MARK  shift, and go to state 218

    $default  reduce using rule 63 (conditional_expression)


State 122

   65 assignment_expression: conditional_expression .

    $default  reduce using rule 65 (assignment_expression)


State 123

   78 expression: assignment_expression .

    $default  reduce using rule 78 (expression)


State 124

   79 expression: expression . COMMA assignment_expression
  186 expression_statement: expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 219
    COMMA       shift, and go to state 220


State 125

  183 block_item: declaration .

    $default  reduce using rule 183 (block_item)


State 126

  184 block_item: statement .

    $default  reduce using rule 184 (block_item)


State 127

  170 statement: labeled_statement .

    $default  reduce using rule 170 (statement)


State 128

  171 statement: compound_statement .

    $default  reduce using rule 171 (statement)


State 129

  180 compound_statement: C_BRACKET_OPEN block_item_list . C_BRACKET_CLOSE
  182 block_item_list: block_item_list . block_item

    C_BRACKET_OPEN      shift, and go to state 59
    C_BRACKET_CLOSE     shift, and go to state 221
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK_LOOP          shift, and go to state 88
    EXTERN              shift, and go to state 5
    RETURN_VAL          shift, and go to state 89
    VOID                shift, and go to state 6
    CASE_KEYWORD        shift, and go to state 90
    DT_FLOAT            shift, and go to state 7
    DT_SHORT            shift, and go to state 8
    VOLATILE            shift, and go to state 9
    DT_CHAR             shift, and go to state 10
    FOR_KEYWORD         shift, and go to state 91
    SIGNED              shift, and go to state 11
    WHILE_KEYWORD       shift, and go to state 92
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    DT_BOOL             shift, and go to state 13
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    STATIC              shift, and go to state 14
    DT_COMPLEX          shift, and go to state 15
    DEFAULT             shift, and go to state 97
    INLINE              shift, and go to state 16
    DT_IMAGINARY        shift, and go to state 17
    DO_KEYWORD          shift, and go to state 98
    DT_INT              shift, and go to state 18
    SWITCH              shift, and go to state 99
    DT_DOUBLE           shift, and go to state 19
    DT_LONG             shift, and go to state 20
    REGISTER            shift, and go to state 21
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    declaration                go to state 125
    declaration_specifiers     go to state 62
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 126
    labeled_statement          go to state 127
    compound_statement         go to state 128
    block_item                 go to state 222
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 130

  181 block_item_list: block_item .

    $default  reduce using rule 181 (block_item_list)


State 131

  172 statement: expression_statement .

    $default  reduce using rule 172 (statement)


State 132

  173 statement: selection_statement .

    $default  reduce using rule 173 (statement)


State 133

  174 statement: iteration_statement .

    $default  reduce using rule 174 (statement)


State 134

  175 statement: jump_statement .

    $default  reduce using rule 175 (statement)


State 135

  159 initializer: C_BRACKET_OPEN . initializer_list C_BRACKET_CLOSE
  160            | C_BRACKET_OPEN . initializer_list COMMA C_BRACKET_CLOSE

    SQ_BRACKET_OPEN     shift, and go to state 223
    C_BRACKET_OPEN      shift, and go to state 135
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    DOT                 shift, and go to state 224
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 225
    initializer_list           go to state 226
    designation                go to state 227
    designator_list            go to state 228
    designator                 go to state 229


State 136

    5 primary_expression: IDENTIFIER .

    $default  reduce using rule 5 (primary_expression)


State 137

  158 initializer: assignment_expression .

    $default  reduce using rule 158 (initializer)


State 138

   94 init_declarator: declarator ASSIGNMENT_OP initializer .

    $default  reduce using rule 94 (init_declarator)


State 139

  208 declaration_list: declaration_list declaration .

    $default  reduce using rule 208 (declaration_list)


State 140

  205 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 205 (function_definition)


State 141

  134 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC . type_qualifier_list_opt assignment_expression SQ_BRACKET_CLOSE

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 54
    type_qualifier_list_opt  go to state 230
    type_qualifier_list      go to state 143


State 142

  133 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt . assignment_expression_opt SQ_BRACKET_CLOSE
  135                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt . MULTIPLY SQ_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 231
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    $default  reduce using rule 141 (assignment_expression_opt)

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 232
    assignment_expression_opt  go to state 233


State 143

  140 type_qualifier_list_opt: type_qualifier_list .
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 140 (type_qualifier_list_opt)

    type_qualifier  go to state 73


State 144

  138 direct_declarator: direct_declarator ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE .

    $default  reduce using rule 138 (direct_declarator)


State 145

  155 identifier_list: IDENTIFIER .

    $default  reduce using rule 155 (identifier_list)


State 146

  153 parameter_declaration: declaration_specifiers . declarator
  154                      | declaration_specifiers .

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    IDENTIFIER          shift, and go to state 37

    $default  reduce using rule 154 (parameter_declaration)

    declarator         go to state 234
    direct_declarator  go to state 41
    pointer            go to state 42


State 147

  136 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 235


State 148

  149 parameter_type_list: parameter_list .
  150                    | parameter_list . COMMA THREE_DOTS
  152 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 236

    $default  reduce using rule 149 (parameter_type_list)


State 149

  151 parameter_list: parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


State 150

  137 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list . ROUND_BRACKET_CLOSE
  156 identifier_list: identifier_list . COMMA IDENTIFIER

    ROUND_BRACKET_CLOSE  shift, and go to state 237
    COMMA                shift, and go to state 238


State 151

   33 cast_expression: unary_expression .

    $default  reduce using rule 33 (cast_expression)


State 152

   80 constant_expression: conditional_expression .

    $default  reduce using rule 80 (constant_expression)


State 153

  124 enumerator: IDENTIFIER ASSIGNMENT_OP constant_expression .

    $default  reduce using rule 124 (enumerator)


State 154

  118 enum_specifier: ENUM C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE .

    $default  reduce using rule 118 (enum_specifier)


State 155

  122 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 122 (enumerator_list)


State 156

  117 enum_specifier: ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list C_BRACKET_CLOSE .

    $default  reduce using rule 117 (enum_specifier)


State 157

  119 enum_specifier: ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list COMMA . C_BRACKET_CLOSE
  122 enumerator_list: enumerator_list COMMA . enumerator

    C_BRACKET_CLOSE  shift, and go to state 239
    IDENTIFIER       shift, and go to state 49

    enumerator  go to state 155


State 158

    8 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
   79 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 240
    COMMA                shift, and go to state 220


State 159

  112 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  113                         | type_specifier .

    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    DT_COMPLEX    shift, and go to state 15
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20

    $default  reduce using rule 113 (specifier_qualifier_list)

    type_specifier            go to state 159
    specifier_qualifier_list  go to state 241
    enum_specifier            go to state 26
    type_qualifier            go to state 161


State 160

  157 type_name: specifier_qualifier_list .

    $default  reduce using rule 157 (type_name)


State 161

  114 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  115                         | type_qualifier .

    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    DT_COMPLEX    shift, and go to state 15
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20

    $default  reduce using rule 115 (specifier_qualifier_list)

    type_specifier            go to state 159
    specifier_qualifier_list  go to state 242
    enum_specifier            go to state 26
    type_qualifier            go to state 161


State 162

   17 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE
   34 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 243


State 163

    8 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   17 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    VOID                shift, and go to state 6
    DT_FLOAT            shift, and go to state 7
    DT_SHORT            shift, and go to state 8
    VOLATILE            shift, and go to state 9
    DT_CHAR             shift, and go to state 10
    SIGNED              shift, and go to state 11
    CONST               shift, and go to state 12
    SIZEOF              shift, and go to state 94
    DT_BOOL             shift, and go to state 13
    DT_COMPLEX          shift, and go to state 15
    DT_IMAGINARY        shift, and go to state 17
    DT_INT              shift, and go to state 18
    DT_DOUBLE           shift, and go to state 19
    DT_LONG             shift, and go to state 20
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 158
    type_specifier             go to state 159
    specifier_qualifier_list   go to state 160
    enum_specifier             go to state 26
    type_qualifier             go to state 161
    type_name                  go to state 244


State 164

   22 unary_expression: PLUS_PLUS unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 165

   23 unary_expression: MINUS_MINUS unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 166

  198 jump_statement: BREAK_LOOP SEMI_COLON .

    $default  reduce using rule 198 (jump_statement)


State 167

  199 jump_statement: RETURN_VAL SEMI_COLON .

    $default  reduce using rule 199 (jump_statement)


State 168

   79 expression: expression . COMMA assignment_expression
  200 jump_statement: RETURN_VAL expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 245
    COMMA       shift, and go to state 220


State 169

  177 labeled_statement: CASE_KEYWORD constant_expression . COLON statement

    COLON  shift, and go to state 246


State 170

  192 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN . expression_statement expression_statement ROUND_BRACKET_CLOSE statement
  193                    | FOR_KEYWORD ROUND_BRACKET_OPEN . expression_statement expression_statement expression ROUND_BRACKET_CLOSE statement
  194                    | FOR_KEYWORD ROUND_BRACKET_OPEN . declaration expression_statement expression ROUND_BRACKET_CLOSE statement
  195                    | FOR_KEYWORD ROUND_BRACKET_OPEN . declaration expression_statement ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    EXTERN              shift, and go to state 5
    VOID                shift, and go to state 6
    DT_FLOAT            shift, and go to state 7
    DT_SHORT            shift, and go to state 8
    VOLATILE            shift, and go to state 9
    DT_CHAR             shift, and go to state 10
    SIGNED              shift, and go to state 11
    CONST               shift, and go to state 12
    SIZEOF              shift, and go to state 94
    DT_BOOL             shift, and go to state 13
    STATIC              shift, and go to state 14
    DT_COMPLEX          shift, and go to state 15
    INLINE              shift, and go to state 16
    DT_IMAGINARY        shift, and go to state 17
    DT_INT              shift, and go to state 18
    DT_DOUBLE           shift, and go to state 19
    DT_LONG             shift, and go to state 20
    REGISTER            shift, and go to state 21
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    declaration                go to state 247
    declaration_specifiers     go to state 62
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_statement       go to state 248


State 171

  190 iteration_statement: WHILE_KEYWORD ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 249


State 172

  196 jump_statement: GOTO IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 250


State 173

    8 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   17 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE
   26 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    VOID                shift, and go to state 6
    DT_FLOAT            shift, and go to state 7
    DT_SHORT            shift, and go to state 8
    VOLATILE            shift, and go to state 9
    DT_CHAR             shift, and go to state 10
    SIGNED              shift, and go to state 11
    CONST               shift, and go to state 12
    SIZEOF              shift, and go to state 94
    DT_BOOL             shift, and go to state 13
    DT_COMPLEX          shift, and go to state 15
    DT_IMAGINARY        shift, and go to state 17
    DT_INT              shift, and go to state 18
    DT_DOUBLE           shift, and go to state 19
    DT_LONG             shift, and go to state 20
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 158
    type_specifier             go to state 159
    specifier_qualifier_list   go to state 160
    enum_specifier             go to state 26
    type_qualifier             go to state 161
    type_name                  go to state 251


State 174

   25 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 175

  197 jump_statement: CONTINUE_LOOP SEMI_COLON .

    $default  reduce using rule 197 (jump_statement)


State 176

  187 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement
  188                    | IF_KEYWORD ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement ELSE_KEYWORD statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 252


State 177

  178 labeled_statement: DEFAULT COLON . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 253
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 178

  191 iteration_statement: DO_KEYWORD statement . WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMI_COLON

    WHILE_KEYWORD  shift, and go to state 254


State 179

  189 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 255


State 180

  176 labeled_statement: IDENTIFIER COLON . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 256
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 181

   10 postfix_expression: postfix_expression SQ_BRACKET_OPEN . expression SQ_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 257


State 182

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . ROUND_BRACKET_CLOSE
   12                   | postfix_expression ROUND_BRACKET_OPEN . argument_expression_list ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN   shift, and go to state 78
    ROUND_BRACKET_CLOSE  shift, and go to state 258
    PLUS                 shift, and go to state 79
    MINUS                shift, and go to state 80
    MULTIPLY             shift, and go to state 81
    AND                  shift, and go to state 82
    EXCLA_NOT            shift, and go to state 83
    TILDA                shift, and go to state 84
    PLUS_PLUS            shift, and go to state 85
    MINUS_MINUS          shift, and go to state 86
    SIZEOF               shift, and go to state 94
    IDENTIFIER           shift, and go to state 136
    STRING_LITERAL       shift, and go to state 101
    INTEGER_CONSTANT     shift, and go to state 102
    FLOAT_CONSTANT       shift, and go to state 103
    CHAR_CONSTANT        shift, and go to state 104
    ENUM_CONSTANT        shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    argument_expression_list   go to state 259
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 260


State 183

   15 postfix_expression: postfix_expression PLUS_PLUS .

    $default  reduce using rule 15 (postfix_expression)


State 184

   16 postfix_expression: postfix_expression MINUS_MINUS .

    $default  reduce using rule 16 (postfix_expression)


State 185

   13 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 261


State 186

   14 postfix_expression: postfix_expression POINTER_ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 262


State 187

   68 assignment_operator: CMP_ASGN_MULTIPLY .

    $default  reduce using rule 68 (assignment_operator)


State 188

   69 assignment_operator: CMP_ASGN_DIVIDE .

    $default  reduce using rule 69 (assignment_operator)


State 189

   70 assignment_operator: CMP_ASGN_MODULO .

    $default  reduce using rule 70 (assignment_operator)


State 190

   71 assignment_operator: CMP_ASGN_PLUS .

    $default  reduce using rule 71 (assignment_operator)


State 191

   72 assignment_operator: CMP_ASGN_MINUS .

    $default  reduce using rule 72 (assignment_operator)


State 192

   73 assignment_operator: CMP_ASGN_LEFT_SHIFT .

    $default  reduce using rule 73 (assignment_operator)


State 193

   74 assignment_operator: CMP_ASGN_RIGHT_SHIFT .

    $default  reduce using rule 74 (assignment_operator)


State 194

   75 assignment_operator: CMP_ASGN_AND .

    $default  reduce using rule 75 (assignment_operator)


State 195

   76 assignment_operator: CMP_ASGN_XOR .

    $default  reduce using rule 76 (assignment_operator)


State 196

   77 assignment_operator: CMP_ASGN_OR .

    $default  reduce using rule 77 (assignment_operator)


State 197

   67 assignment_operator: ASSIGNMENT_OP .

    $default  reduce using rule 67 (assignment_operator)


State 198

   66 assignment_expression: unary_expression assignment_operator . assignment_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 263


State 199

   24 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 24 (unary_expression)


State 200

   38 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 151
    unary_operator      go to state 110
    cast_expression     go to state 264


State 201

   36 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 151
    unary_operator      go to state 110
    cast_expression     go to state 265


State 202

   37 multiplicative_expression: multiplicative_expression FWD_SLASH . cast_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 151
    unary_operator      go to state 110
    cast_expression     go to state 266


State 203

   40 additive_expression: additive_expression PLUS . multiplicative_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 267


State 204

   41 additive_expression: additive_expression MINUS . multiplicative_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 268


State 205

   43 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 269


State 206

   44 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 270


State 207

   46 relational_expression: relational_expression LESS_THAN . shift_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 271


State 208

   47 relational_expression: relational_expression GREATER_THAN . shift_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 272


State 209

   48 relational_expression: relational_expression LESS_THAN_EQUAL . shift_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 273


State 210

   49 relational_expression: relational_expression GREATER_THAN_EQUAL . shift_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 274


State 211

   51 equality_expression: equality_expression EQUAL_EQUAL . relational_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 275


State 212

   52 equality_expression: equality_expression NOT_EQUAL . relational_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 276


State 213

   54 AND_expression: AND_expression AND . equality_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 277


State 214

   56 exclusive_OR_expression: exclusive_OR_expression XOR . AND_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 278


State 215

   58 inclusive_OR_expression: inclusive_OR_expression OR . exclusive_OR_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 279


State 216

   60 logical_and_expression: logical_and_expression AND_AND . inclusive_OR_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 280


State 217

   62 logical_or_expression: logical_or_expression OR_OR . logical_and_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 281


State 218

   64 conditional_expression: logical_or_expression QUESTION_MARK . expression COLON conditional_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 282


State 219

  186 expression_statement: expression SEMI_COLON .

    $default  reduce using rule 186 (expression_statement)


State 220

   79 expression: expression COMMA . assignment_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 283


State 221

  180 compound_statement: C_BRACKET_OPEN block_item_list C_BRACKET_CLOSE .

    $default  reduce using rule 180 (compound_statement)


State 222

  182 block_item_list: block_item_list block_item .

    $default  reduce using rule 182 (block_item_list)


State 223

  168 designator: SQ_BRACKET_OPEN . constant_expression SQ_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 152
    constant_expression        go to state 284


State 224

  169 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 285


State 225

  161 initializer_list: initializer .

    $default  reduce using rule 161 (initializer_list)


State 226

  159 initializer: C_BRACKET_OPEN initializer_list . C_BRACKET_CLOSE
  160            | C_BRACKET_OPEN initializer_list . COMMA C_BRACKET_CLOSE
  163 initializer_list: initializer_list . COMMA initializer
  164                 | initializer_list . COMMA designation initializer

    C_BRACKET_CLOSE  shift, and go to state 286
    COMMA            shift, and go to state 287


State 227

  162 initializer_list: designation . initializer

    C_BRACKET_OPEN      shift, and go to state 135
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 288


State 228

  165 designation: designator_list . ASSIGNMENT_OP
  167 designator_list: designator_list . designator

    SQ_BRACKET_OPEN  shift, and go to state 223
    DOT              shift, and go to state 224
    ASSIGNMENT_OP    shift, and go to state 289

    designator  go to state 290


State 229

  166 designator_list: designator .

    $default  reduce using rule 166 (designator_list)


State 230

  134 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list_opt . assignment_expression SQ_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 291


State 231

   28 unary_operator: MULTIPLY .
  135 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt MULTIPLY . SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 292

    $default  reduce using rule 28 (unary_operator)


State 232

  142 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 142 (assignment_expression_opt)


State 233

  133 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt . SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 293


State 234

  153 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 153 (parameter_declaration)


State 235

  136 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 136 (direct_declarator)


State 236

  150 parameter_type_list: parameter_list COMMA . THREE_DOTS
  152 parameter_list: parameter_list COMMA . parameter_declaration

    THREE_DOTS    shift, and go to state 294
    AUTO          shift, and go to state 1
    ENUM          shift, and go to state 2
    RESTRICT      shift, and go to state 3
    UNSIGNED      shift, and go to state 4
    EXTERN        shift, and go to state 5
    VOID          shift, and go to state 6
    DT_FLOAT      shift, and go to state 7
    DT_SHORT      shift, and go to state 8
    VOLATILE      shift, and go to state 9
    DT_CHAR       shift, and go to state 10
    SIGNED        shift, and go to state 11
    CONST         shift, and go to state 12
    DT_BOOL       shift, and go to state 13
    STATIC        shift, and go to state 14
    DT_COMPLEX    shift, and go to state 15
    INLINE        shift, and go to state 16
    DT_IMAGINARY  shift, and go to state 17
    DT_INT        shift, and go to state 18
    DT_DOUBLE     shift, and go to state 19
    DT_LONG       shift, and go to state 20
    REGISTER      shift, and go to state 21

    declaration_specifiers   go to state 146
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 295


State 237

  137 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 137 (direct_declarator)


State 238

  156 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 296


State 239

  119 enum_specifier: ENUM IDENTIFIER C_BRACKET_OPEN enumerator_list COMMA C_BRACKET_CLOSE .

    $default  reduce using rule 119 (enum_specifier)


State 240

    8 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 8 (primary_expression)


State 241

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 112 (specifier_qualifier_list)


State 242

  114 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 114 (specifier_qualifier_list)


State 243

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE
   34 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression

    C_BRACKET_OPEN      shift, and go to state 297
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant            go to state 106
    primary_expression  go to state 107
    postfix_expression  go to state 108
    unary_expression    go to state 151
    unary_operator      go to state 110
    cast_expression     go to state 298


State 244

   17 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 299


State 245

  200 jump_statement: RETURN_VAL expression SEMI_COLON .

    $default  reduce using rule 200 (jump_statement)


State 246

  177 labeled_statement: CASE_KEYWORD constant_expression COLON . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 300
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 247

  194 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration . expression_statement expression ROUND_BRACKET_CLOSE statement
  195                    | FOR_KEYWORD ROUND_BRACKET_OPEN declaration . expression_statement ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    expression_statement       go to state 301


State 248

  192 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement . expression_statement ROUND_BRACKET_CLOSE statement
  193                    | FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement . expression_statement expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    expression_statement       go to state 302


State 249

   79 expression: expression . COMMA assignment_expression
  190 iteration_statement: WHILE_KEYWORD ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 303
    COMMA                shift, and go to state 220


State 250

  196 jump_statement: GOTO IDENTIFIER SEMI_COLON .

    $default  reduce using rule 196 (jump_statement)


State 251

   17 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE
   26 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 304


State 252

   79 expression: expression . COMMA assignment_expression
  187 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
  188                    | IF_KEYWORD ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement ELSE_KEYWORD statement

    ROUND_BRACKET_CLOSE  shift, and go to state 305
    COMMA                shift, and go to state 220


State 253

  178 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 178 (labeled_statement)


State 254

  191 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMI_COLON

    ROUND_BRACKET_OPEN  shift, and go to state 306


State 255

   79 expression: expression . COMMA assignment_expression
  189 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 307
    COMMA                shift, and go to state 220


State 256

  176 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 176 (labeled_statement)


State 257

   10 postfix_expression: postfix_expression SQ_BRACKET_OPEN expression . SQ_BRACKET_CLOSE
   79 expression: expression . COMMA assignment_expression

    SQ_BRACKET_CLOSE  shift, and go to state 308
    COMMA             shift, and go to state 220


State 258

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE .

    $default  reduce using rule 11 (postfix_expression)


State 259

   12 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list . ROUND_BRACKET_CLOSE
   20 argument_expression_list: argument_expression_list . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 309
    COMMA                shift, and go to state 310


State 260

   19 argument_expression_list: assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 261

   13 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 262

   14 postfix_expression: postfix_expression POINTER_ARROW IDENTIFIER .

    $default  reduce using rule 14 (postfix_expression)


State 263

   66 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


State 264

   38 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 265

   36 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 266

   37 multiplicative_expression: multiplicative_expression FWD_SLASH cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 267

   36 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   37                          | multiplicative_expression . FWD_SLASH cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   40 additive_expression: additive_expression PLUS multiplicative_expression .

    MODULO     shift, and go to state 200
    MULTIPLY   shift, and go to state 201
    FWD_SLASH  shift, and go to state 202

    $default  reduce using rule 40 (additive_expression)


State 268

   36 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   37                          | multiplicative_expression . FWD_SLASH cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   41 additive_expression: additive_expression MINUS multiplicative_expression .

    MODULO     shift, and go to state 200
    MULTIPLY   shift, and go to state 201
    FWD_SLASH  shift, and go to state 202

    $default  reduce using rule 41 (additive_expression)


State 269

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    PLUS   shift, and go to state 203
    MINUS  shift, and go to state 204

    $default  reduce using rule 43 (shift_expression)


State 270

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    PLUS   shift, and go to state 203
    MINUS  shift, and go to state 204

    $default  reduce using rule 44 (shift_expression)


State 271

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 205
    RIGHT_SHIFT  shift, and go to state 206

    $default  reduce using rule 46 (relational_expression)


State 272

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 205
    RIGHT_SHIFT  shift, and go to state 206

    $default  reduce using rule 47 (relational_expression)


State 273

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 205
    RIGHT_SHIFT  shift, and go to state 206

    $default  reduce using rule 48 (relational_expression)


State 274

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   49 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 205
    RIGHT_SHIFT  shift, and go to state 206

    $default  reduce using rule 49 (relational_expression)


State 275

   46 relational_expression: relational_expression . LESS_THAN shift_expression
   47                      | relational_expression . GREATER_THAN shift_expression
   48                      | relational_expression . LESS_THAN_EQUAL shift_expression
   49                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   51 equality_expression: equality_expression EQUAL_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 207
    GREATER_THAN        shift, and go to state 208
    LESS_THAN_EQUAL     shift, and go to state 209
    GREATER_THAN_EQUAL  shift, and go to state 210

    $default  reduce using rule 51 (equality_expression)


State 276

   46 relational_expression: relational_expression . LESS_THAN shift_expression
   47                      | relational_expression . GREATER_THAN shift_expression
   48                      | relational_expression . LESS_THAN_EQUAL shift_expression
   49                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   52 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 207
    GREATER_THAN        shift, and go to state 208
    LESS_THAN_EQUAL     shift, and go to state 209
    GREATER_THAN_EQUAL  shift, and go to state 210

    $default  reduce using rule 52 (equality_expression)


State 277

   51 equality_expression: equality_expression . EQUAL_EQUAL relational_expression
   52                    | equality_expression . NOT_EQUAL relational_expression
   54 AND_expression: AND_expression AND equality_expression .

    EQUAL_EQUAL  shift, and go to state 211
    NOT_EQUAL    shift, and go to state 212

    $default  reduce using rule 54 (AND_expression)


State 278

   54 AND_expression: AND_expression . AND equality_expression
   56 exclusive_OR_expression: exclusive_OR_expression XOR AND_expression .

    AND  shift, and go to state 213

    $default  reduce using rule 56 (exclusive_OR_expression)


State 279

   56 exclusive_OR_expression: exclusive_OR_expression . XOR AND_expression
   58 inclusive_OR_expression: inclusive_OR_expression OR exclusive_OR_expression .

    XOR  shift, and go to state 214

    $default  reduce using rule 58 (inclusive_OR_expression)


State 280

   58 inclusive_OR_expression: inclusive_OR_expression . OR exclusive_OR_expression
   60 logical_and_expression: logical_and_expression AND_AND inclusive_OR_expression .

    OR  shift, and go to state 215

    $default  reduce using rule 60 (logical_and_expression)


State 281

   60 logical_and_expression: logical_and_expression . AND_AND inclusive_OR_expression
   62 logical_or_expression: logical_or_expression OR_OR logical_and_expression .

    AND_AND  shift, and go to state 216

    $default  reduce using rule 62 (logical_or_expression)


State 282

   64 conditional_expression: logical_or_expression QUESTION_MARK expression . COLON conditional_expression
   79 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 311
    COMMA  shift, and go to state 220


State 283

   79 expression: expression COMMA assignment_expression .

    $default  reduce using rule 79 (expression)


State 284

  168 designator: SQ_BRACKET_OPEN constant_expression . SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 312


State 285

  169 designator: DOT IDENTIFIER .

    $default  reduce using rule 169 (designator)


State 286

  159 initializer: C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE .

    $default  reduce using rule 159 (initializer)


State 287

  160 initializer: C_BRACKET_OPEN initializer_list COMMA . C_BRACKET_CLOSE
  163 initializer_list: initializer_list COMMA . initializer
  164                 | initializer_list COMMA . designation initializer

    SQ_BRACKET_OPEN     shift, and go to state 223
    C_BRACKET_OPEN      shift, and go to state 135
    C_BRACKET_CLOSE     shift, and go to state 313
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    DOT                 shift, and go to state 224
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 314
    designation                go to state 315
    designator_list            go to state 228
    designator                 go to state 229


State 288

  162 initializer_list: designation initializer .

    $default  reduce using rule 162 (initializer_list)


State 289

  165 designation: designator_list ASSIGNMENT_OP .

    $default  reduce using rule 165 (designation)


State 290

  167 designator_list: designator_list designator .

    $default  reduce using rule 167 (designator_list)


State 291

  134 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression . SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 316


State 292

  135 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQ_BRACKET_CLOSE .

    $default  reduce using rule 135 (direct_declarator)


State 293

  133 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQ_BRACKET_CLOSE .

    $default  reduce using rule 133 (direct_declarator)


State 294

  150 parameter_type_list: parameter_list COMMA THREE_DOTS .

    $default  reduce using rule 150 (parameter_type_list)


State 295

  152 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 152 (parameter_list)


State 296

  156 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 156 (identifier_list)


State 297

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN . initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN . initializer_list COMMA C_BRACKET_CLOSE

    SQ_BRACKET_OPEN     shift, and go to state 223
    C_BRACKET_OPEN      shift, and go to state 135
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    DOT                 shift, and go to state 224
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 225
    initializer_list           go to state 317
    designation                go to state 227
    designator_list            go to state 228
    designator                 go to state 229


State 298

   34 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 34 (cast_expression)


State 299

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE

    C_BRACKET_OPEN  shift, and go to state 297


State 300

  177 labeled_statement: CASE_KEYWORD constant_expression COLON statement .

    $default  reduce using rule 177 (labeled_statement)


State 301

  194 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement . expression ROUND_BRACKET_CLOSE statement
  195                    | FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN   shift, and go to state 78
    ROUND_BRACKET_CLOSE  shift, and go to state 318
    PLUS                 shift, and go to state 79
    MINUS                shift, and go to state 80
    MULTIPLY             shift, and go to state 81
    AND                  shift, and go to state 82
    EXCLA_NOT            shift, and go to state 83
    TILDA                shift, and go to state 84
    PLUS_PLUS            shift, and go to state 85
    MINUS_MINUS          shift, and go to state 86
    SIZEOF               shift, and go to state 94
    IDENTIFIER           shift, and go to state 136
    STRING_LITERAL       shift, and go to state 101
    INTEGER_CONSTANT     shift, and go to state 102
    FLOAT_CONSTANT       shift, and go to state 103
    CHAR_CONSTANT        shift, and go to state 104
    ENUM_CONSTANT        shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 319


State 302

  192 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement . ROUND_BRACKET_CLOSE statement
  193                    | FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement . expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN   shift, and go to state 78
    ROUND_BRACKET_CLOSE  shift, and go to state 320
    PLUS                 shift, and go to state 79
    MINUS                shift, and go to state 80
    MULTIPLY             shift, and go to state 81
    AND                  shift, and go to state 82
    EXCLA_NOT            shift, and go to state 83
    TILDA                shift, and go to state 84
    PLUS_PLUS            shift, and go to state 85
    MINUS_MINUS          shift, and go to state 86
    SIZEOF               shift, and go to state 94
    IDENTIFIER           shift, and go to state 136
    STRING_LITERAL       shift, and go to state 101
    INTEGER_CONSTANT     shift, and go to state 102
    FLOAT_CONSTANT       shift, and go to state 103
    CHAR_CONSTANT        shift, and go to state 104
    ENUM_CONSTANT        shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 321


State 303

  190 iteration_statement: WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 322
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 304

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE
   26 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .

    C_BRACKET_OPEN  shift, and go to state 297

    $default  reduce using rule 26 (unary_expression)


State 305

  187 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement
  188                    | IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement ELSE_KEYWORD statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 323
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 306

  191 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMI_COLON

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 324


State 307

  189 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 325
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 308

   10 postfix_expression: postfix_expression SQ_BRACKET_OPEN expression SQ_BRACKET_CLOSE .

    $default  reduce using rule 10 (postfix_expression)


State 309

   12 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 12 (postfix_expression)


State 310

   20 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 326


State 311

   64 conditional_expression: logical_or_expression QUESTION_MARK expression COLON . conditional_expression

    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 151
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 327


State 312

  168 designator: SQ_BRACKET_OPEN constant_expression SQ_BRACKET_CLOSE .

    $default  reduce using rule 168 (designator)


State 313

  160 initializer: C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE .

    $default  reduce using rule 160 (initializer)


State 314

  163 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 163 (initializer_list)


State 315

  164 initializer_list: initializer_list COMMA designation . initializer

    C_BRACKET_OPEN      shift, and go to state 135
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 328


State 316

  134 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_BRACKET_CLOSE .

    $default  reduce using rule 134 (direct_declarator)


State 317

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list . C_BRACKET_CLOSE
   18                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list . COMMA C_BRACKET_CLOSE
  163 initializer_list: initializer_list . COMMA initializer
  164                 | initializer_list . COMMA designation initializer

    C_BRACKET_CLOSE  shift, and go to state 329
    COMMA            shift, and go to state 330


State 318

  195 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement ROUND_BRACKET_CLOSE . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 331
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 319

   79 expression: expression . COMMA assignment_expression
  194 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 332
    COMMA                shift, and go to state 220


State 320

  192 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement ROUND_BRACKET_CLOSE . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 333
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 321

   79 expression: expression . COMMA assignment_expression
  193 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 334
    COMMA                shift, and go to state 220


State 322

  190 iteration_statement: WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 190 (iteration_statement)


State 323

  187 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .
  188                    | IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement . ELSE_KEYWORD statement

    ELSE_KEYWORD  shift, and go to state 335

    ELSE_KEYWORD  [reduce using rule 187 (selection_statement)]
    $default      reduce using rule 187 (selection_statement)


State 324

   79 expression: expression . COMMA assignment_expression
  191 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMI_COLON

    ROUND_BRACKET_CLOSE  shift, and go to state 336
    COMMA                shift, and go to state 220


State 325

  189 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 189 (selection_statement)


State 326

   20 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 20 (argument_expression_list)


State 327

   64 conditional_expression: logical_or_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 64 (conditional_expression)


State 328

  164 initializer_list: initializer_list COMMA designation initializer .

    $default  reduce using rule 164 (initializer_list)


State 329

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list C_BRACKET_CLOSE .

    $default  reduce using rule 17 (postfix_expression)


State 330

   18 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA . C_BRACKET_CLOSE
  163 initializer_list: initializer_list COMMA . initializer
  164                 | initializer_list COMMA . designation initializer

    SQ_BRACKET_OPEN     shift, and go to state 223
    C_BRACKET_OPEN      shift, and go to state 135
    C_BRACKET_CLOSE     shift, and go to state 337
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    DOT                 shift, and go to state 224
    SIZEOF              shift, and go to state 94
    IDENTIFIER          shift, and go to state 136
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 137
    initializer                go to state 314
    designation                go to state 315
    designator_list            go to state 228
    designator                 go to state 229


State 331

  195 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 195 (iteration_statement)


State 332

  194 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement expression ROUND_BRACKET_CLOSE . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 338
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 333

  192 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 192 (iteration_statement)


State 334

  193 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement expression ROUND_BRACKET_CLOSE . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 339
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 335

  188 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE_KEYWORD . statement

    C_BRACKET_OPEN      shift, and go to state 59
    ROUND_BRACKET_OPEN  shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    MULTIPLY            shift, and go to state 81
    AND                 shift, and go to state 82
    EXCLA_NOT           shift, and go to state 83
    TILDA               shift, and go to state 84
    PLUS_PLUS           shift, and go to state 85
    MINUS_MINUS         shift, and go to state 86
    SEMI_COLON          shift, and go to state 87
    BREAK_LOOP          shift, and go to state 88
    RETURN_VAL          shift, and go to state 89
    CASE_KEYWORD        shift, and go to state 90
    FOR_KEYWORD         shift, and go to state 91
    WHILE_KEYWORD       shift, and go to state 92
    GOTO                shift, and go to state 93
    SIZEOF              shift, and go to state 94
    CONTINUE_LOOP       shift, and go to state 95
    IF_KEYWORD          shift, and go to state 96
    DEFAULT             shift, and go to state 97
    DO_KEYWORD          shift, and go to state 98
    SWITCH              shift, and go to state 99
    IDENTIFIER          shift, and go to state 100
    STRING_LITERAL      shift, and go to state 101
    INTEGER_CONSTANT    shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 103
    CHAR_CONSTANT       shift, and go to state 104
    ENUM_CONSTANT       shift, and go to state 105

    constant                   go to state 106
    primary_expression         go to state 107
    postfix_expression         go to state 108
    unary_expression           go to state 109
    unary_operator             go to state 110
    cast_expression            go to state 111
    multiplicative_expression  go to state 112
    additive_expression        go to state 113
    shift_expression           go to state 114
    relational_expression      go to state 115
    equality_expression        go to state 116
    AND_expression             go to state 117
    exclusive_OR_expression    go to state 118
    inclusive_OR_expression    go to state 119
    logical_and_expression     go to state 120
    logical_or_expression      go to state 121
    conditional_expression     go to state 122
    assignment_expression      go to state 123
    expression                 go to state 124
    statement                  go to state 340
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 336

  191 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMI_COLON

    SEMI_COLON  shift, and go to state 341


State 337

   18 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE C_BRACKET_OPEN initializer_list COMMA C_BRACKET_CLOSE .

    $default  reduce using rule 18 (postfix_expression)


State 338

  194 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN declaration expression_statement expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 194 (iteration_statement)


State 339

  193 iteration_statement: FOR_KEYWORD ROUND_BRACKET_OPEN expression_statement expression_statement expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 193 (iteration_statement)


State 340

  188 selection_statement: IF_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE_KEYWORD statement .

    $default  reduce using rule 188 (selection_statement)


State 341

  191 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMI_COLON .

    $default  reduce using rule 191 (iteration_statement)
